// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_5S.Data.Context;

namespace Project_5S1.Data.Migrations
{
    [DbContext(typeof(Project_5SContext))]
    [Migration("20220428013128_init41")]
    partial class init41
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project_5S.Domain.Models.FilLocal", b =>
                {
                    b.Property<Guid>("LocallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Filialeid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("localdescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocallId");

                    b.HasIndex("Filialeid");

                    b.ToTable("FilLocal");
                });

            modelBuilder.Entity("Project_5S.Domain.Models.Filiale", b =>
                {
                    b.Property<Guid>("FilialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("filialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("poleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FilialId");

                    b.HasIndex("poleId");

                    b.ToTable("Filiale");
                });

            modelBuilder.Entity("Project_5S.Domain.Models.Normes", b =>
                {
                    b.Property<Guid>("normeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("designation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("normeId");

                    b.ToTable("Normes");
                });

            modelBuilder.Entity("Project_5S.Domain.Models.Pole", b =>
                {
                    b.Property<Guid>("PoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PoleId");

                    b.ToTable("Pole");
                });

            modelBuilder.Entity("Project_5S.Domain.Models.Users", b =>
                {
                    b.Property<Guid>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userimage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userpassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project_5S.Domain.Models.criteres", b =>
                {
                    b.Property<Guid>("critereId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NormeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("criterelabel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("critereId");

                    b.HasIndex("NormeId");

                    b.ToTable("criteres");
                });

            modelBuilder.Entity("Project_5S.Domain.Models.notation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FilLocalid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Userid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("critereid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("date_notation")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("evaluer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("note")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FilLocalid");

                    b.HasIndex("Userid");

                    b.HasIndex("critereid");

                    b.ToTable("notation");
                });

            modelBuilder.Entity("Project_5S.Domain.Models.plan_action", b =>
                {
                    b.Property<Guid>("planId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Plandescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("notationid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("planDate")
                        .HasColumnType("datetime2");

                    b.HasKey("planId");

                    b.HasIndex("notationid");

                    b.ToTable("plan_action");
                });

            modelBuilder.Entity("Project_5S.Domain.Models.FilLocal", b =>
                {
                    b.HasOne("Project_5S.Domain.Models.Filiale", "Filiale")
                        .WithMany("FilLocals")
                        .HasForeignKey("Filialeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_5S.Domain.Models.Filiale", b =>
                {
                    b.HasOne("Project_5S.Domain.Models.Pole", "pole")
                        .WithMany("Filiales")
                        .HasForeignKey("poleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_5S.Domain.Models.criteres", b =>
                {
                    b.HasOne("Project_5S.Domain.Models.Normes", "Normes")
                        .WithMany("criteress")
                        .HasForeignKey("NormeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_5S.Domain.Models.notation", b =>
                {
                    b.HasOne("Project_5S.Domain.Models.FilLocal", "FilLocal")
                        .WithMany("notations")
                        .HasForeignKey("FilLocalid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_5S.Domain.Models.Users", "User")
                        .WithMany("notations")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_5S.Domain.Models.criteres", "criteres")
                        .WithMany("notations")
                        .HasForeignKey("critereid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_5S.Domain.Models.plan_action", b =>
                {
                    b.HasOne("Project_5S.Domain.Models.notation", "notation")
                        .WithMany("plan_Actions")
                        .HasForeignKey("notationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
